openapi: '3.0.0'
info:
  title: 'HTTP Faker API'
  version: '1.0.0'
  description: 'A simple HTTP echo server API'
tags:
  - name: Echo
    description: Endpoints that echo back request information
  - name: Auth
    description: Authentication endpoints
paths:
  /api/echo:
    post:
      summary: Echo back request details
      description: Returns the complete request details including URL, method, headers, and body
      tags:
        - Echo
      responses:
        200:
          description: Request details
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    description: Complete request URL
                  method:
                    type: string
                    description: HTTP method used
                  headers:
                    type: object
                    description: Request headers
                  body:
                    type: string
                    description: Raw request body
  /api/echo/raw:
    post:
      summary: Echo back request body
      description: Returns the raw request body with the original content-type
      tags:
        - Echo
      responses:
        200:
          description: Raw request body
          content:
            '*/*':
              schema:
                type: string
  /api/echo/custom:
    post:
      summary: Echo back request with custom headers and content
      description: Returns the raw request body with the original content-type
      tags:
        - Echo
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                headers:
                  type: object
                  description: Custom headers to return
                content:
                  type: string
                  description: Content to return as-is
                contentBase64:
                  type: string
                  description: Base64 content to decode and return
                contentJSON:
                  type: object
                  description: JSON content to stringify and return
                type:
                  type: string
                  description: Content-Type header to set
      responses:
        200:
          description: Custom response
          content:
            '*/*':
              schema:
                type: string
  /api/auth/oauth2/client-credentials/token:
    post:
      summary: Get OAuth2 access token
      description: Obtain an access token using client credentials grant type
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - grant_type
                - client_id
                - client_secret
                - scope
              properties:
                grant_type:
                  type: string
                  description: Must be 'client_credentials'
                  example: client_credentials
                client_id:
                  type: string
                  description: Client ID
                  example: demo-client-id
                client_secret:
                  type: string
                  description: Client secret
                  example: demo-client-secret
                scope:
                  type: string
                  description: Requested scope
                  example: user:read
      responses:
        200:
          description: Successful authentication
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Authenticated successfully
                  access_token:
                    type: string
                    example: a1b2c3d4e5f6g7h8i9j0
                  scope:
                    type: string
                    example: user:read
        401:
          description: Authentication failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid client details or scope
  /api/auth/oauth2/client-credentials/resource:
    get:
      summary: Access protected resource
      description: Access a protected resource using an OAuth2 access token
      tags:
        - Auth
      parameters:
        - in: query
          name: access_token
          schema:
            type: string
          required: true
          description: OAuth2 access token
      responses:
        200:
          description: Resource access successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  resource:
                    type: object
                    properties:
                      name:
                        type: string
                        example: bruno
                      email:
                        type: string
                        example: hello@bruno.com
        401:
          description: Invalid access token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid Access Token 